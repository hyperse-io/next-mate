// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @unique
  username    String       @unique
  email       String?      @unique
  authSession Session[]
  authorized  Authorized[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Authorized {
  id             String  @id @unique
  userId         String
  hashedPassword String?
  providerId     String?
  providerMethod String
  user           User    @relation(references: [id], fields: [userId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Session {
  id        Int      @id @unique @default(autoincrement())
  token     String   @unique
  userId    String   @unique
  expiresAt DateTime @default(now())
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Post {
  id    String @id @default(uuid())
  title String
  text  String

  // To return `Date`s intact through the API we use transformers
  // https://trpc.io/docs/data-transformers
  // This is unique so it can be used for cursor-based pagination
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
